{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction \u00b6 Series of labs and instructions to introduce you to containers, Github Action and Azure Container Apps. Description \u00b6 The goal is to deploy a frontend application and an API packaged into Docker containers, containers pushed into Azure Container Registry and deployed into Azure Container Apps automatically each time we push new change into our github repository. Application to deploy \u00b6 The demo app runs across two containers: words - a Java REST API which serves words read from a static list web - a Go web application which calls the API and builds words into sentences Run the application locally \u00b6 You can start the application using docker compose: docker compose up -d and test the application inside your browser here . Agenda \u00b6 Lab 0 Pre-work - Install Docker Lab 1 Lab 1 - Build and push our containers to Azure Container Registry Lab 2 Lab 2 - Deploy our app using Azure Container Apps Lab 3 Lab 3 - Automate app building and deployment using Github Action to Azure Container Apps Pre-requirements \u00b6 For this workshop you must have: Docker, A Github Account, An Azure Account, Fork the current repository inside your Github account Technology Used \u00b6 Docker CLI , Docker Compose , Github Actions , Azure Container Apps ,","title":"About the workshop"},{"location":"#introduction","text":"Series of labs and instructions to introduce you to containers, Github Action and Azure Container Apps.","title":"Introduction"},{"location":"#description","text":"The goal is to deploy a frontend application and an API packaged into Docker containers, containers pushed into Azure Container Registry and deployed into Azure Container Apps automatically each time we push new change into our github repository.","title":"Description"},{"location":"#application-to-deploy","text":"The demo app runs across two containers: words - a Java REST API which serves words read from a static list web - a Go web application which calls the API and builds words into sentences","title":"Application to deploy"},{"location":"#run-the-application-locally","text":"You can start the application using docker compose: docker compose up -d and test the application inside your browser here .","title":"Run the application locally"},{"location":"#agenda","text":"Lab 0 Pre-work - Install Docker Lab 1 Lab 1 - Build and push our containers to Azure Container Registry Lab 2 Lab 2 - Deploy our app using Azure Container Apps Lab 3 Lab 3 - Automate app building and deployment using Github Action to Azure Container Apps","title":"Agenda"},{"location":"#pre-requirements","text":"For this workshop you must have: Docker, A Github Account, An Azure Account, Fork the current repository inside your Github account","title":"Pre-requirements"},{"location":"#technology-used","text":"Docker CLI , Docker Compose , Github Actions , Azure Container Apps ,","title":"Technology Used"},{"location":"lab-0/","text":"Lab 0 - Install Docker \u00b6 Overview \u00b6 In this lab, you will install docker. We will be using docker throughout the rest of the labs. Prerequisites \u00b6 None Optional: Install Docker Desktop \u00b6 Navigate to Get Docker , Select the option for your operating system or platform: Docker Desktop for Mac, Docker Desktop for Windows, Docker for Linux, On this page you will find the installation for your operating systems. For example, if you are using a Mac, select \"MacOS\", to find the installation for the Mac platform. Summary \u00b6 By installing Docker, or alternatively, familiarizing yourself with Play with Docker , you are ready to complete the remaining labs in this course.","title":"Pre-work - Install Docker"},{"location":"lab-0/#lab-0-install-docker","text":"","title":"Lab 0 - Install Docker"},{"location":"lab-0/#overview","text":"In this lab, you will install docker. We will be using docker throughout the rest of the labs.","title":"Overview"},{"location":"lab-0/#prerequisites","text":"None","title":"Prerequisites"},{"location":"lab-0/#optional-install-docker-desktop","text":"Navigate to Get Docker , Select the option for your operating system or platform: Docker Desktop for Mac, Docker Desktop for Windows, Docker for Linux, On this page you will find the installation for your operating systems. For example, if you are using a Mac, select \"MacOS\", to find the installation for the Mac platform.","title":"Optional: Install Docker Desktop"},{"location":"lab-0/#summary","text":"By installing Docker, or alternatively, familiarizing yourself with Play with Docker , you are ready to complete the remaining labs in this course.","title":"Summary"},{"location":"lab-1/","text":"Lab 1 - Build and push our containers to Azure Container Registry \u00b6 Create an Azure Container Registry \u00b6 Build the containers locally \u00b6 cd web docker build -t <registry-name>.azurecr.io/web:1.0.0 . cd ../words docker build -t <registry-name>.azurecr.io/words:1.0.0 . Log into ACR and push our docker images \u00b6 docker login <registry-name>.azurecr.io docker push <registry-name>.azurecr.io/web:1.0.0 docker build -t <registry-name>.azurecr.io/words:1.0.0 Summary \u00b6 We created a private docker registry, build 2 docker images and push them into our private registry. Instead of using the private registry of Azure, we could use the public registry of Docker because our image doesn't have anything priavte or sensible too.","title":"Lab 1 - Build and push our containers to Azure Container Registry"},{"location":"lab-1/#lab-1-build-and-push-our-containers-to-azure-container-registry","text":"","title":"Lab 1 - Build and push our containers to Azure Container Registry"},{"location":"lab-1/#create-an-azure-container-registry","text":"","title":"Create an Azure Container Registry"},{"location":"lab-1/#build-the-containers-locally","text":"cd web docker build -t <registry-name>.azurecr.io/web:1.0.0 . cd ../words docker build -t <registry-name>.azurecr.io/words:1.0.0 .","title":"Build the containers locally"},{"location":"lab-1/#log-into-acr-and-push-our-docker-images","text":"docker login <registry-name>.azurecr.io docker push <registry-name>.azurecr.io/web:1.0.0 docker build -t <registry-name>.azurecr.io/words:1.0.0","title":"Log into ACR and push our docker images"},{"location":"lab-1/#summary","text":"We created a private docker registry, build 2 docker images and push them into our private registry. Instead of using the private registry of Azure, we could use the public registry of Docker because our image doesn't have anything priavte or sensible too.","title":"Summary"},{"location":"lab-2/","text":"Lab 2 - Deploy our app using Azure Container Apps \u00b6 Creating ... \u00b6","title":"Lab 2 - Deploy our app using Azure Container Apps"},{"location":"lab-2/#lab-2-deploy-our-app-using-azure-container-apps","text":"","title":"Lab 2 - Deploy our app using Azure Container Apps"},{"location":"lab-2/#creating","text":"","title":"Creating ..."},{"location":"lab-3/","text":"Lab 3 - Automate app building and deployment using Github Action to Azure Container Apps \u00b6 Add Github Action to the repository \u00b6 Create Azure Service Principal for Github \u00b6 Create the service account \u00b6 Add access to ACR and Azure Container Apps \u00b6 Add build secret with our service principal credentials \u00b6 Add Github Action for the web app \u00b6 Add Github Action for the words app \u00b6 Summary \u00b6 We created a limited account that could interact with our docker registry and our container applications. After that, we build and deployed our application only when they have some changes. You have now a full Continuous Deployment Pipeline running into Github !","title":"Lab 3 - Automate app building and deployment using Github Action to Azure Container Apps"},{"location":"lab-3/#lab-3-automate-app-building-and-deployment-using-github-action-to-azure-container-apps","text":"","title":"Lab 3 - Automate app building and deployment using Github Action to Azure Container Apps"},{"location":"lab-3/#add-github-action-to-the-repository","text":"","title":"Add Github Action to the repository"},{"location":"lab-3/#create-azure-service-principal-for-github","text":"","title":"Create Azure Service Principal for Github"},{"location":"lab-3/#create-the-service-account","text":"","title":"Create the service account"},{"location":"lab-3/#add-access-to-acr-and-azure-container-apps","text":"","title":"Add access to ACR and Azure Container Apps"},{"location":"lab-3/#add-build-secret-with-our-service-principal-credentials","text":"","title":"Add build secret with our service principal credentials"},{"location":"lab-3/#add-github-action-for-the-web-app","text":"","title":"Add Github Action for the web app"},{"location":"lab-3/#add-github-action-for-the-words-app","text":"","title":"Add Github Action for the words app"},{"location":"lab-3/#summary","text":"We created a limited account that could interact with our docker registry and our container applications. After that, we build and deployed our application only when they have some changes. You have now a full Continuous Deployment Pipeline running into Github !","title":"Summary"}]}